using System;
using System.Xml;
using System.IO;

namespace Plugin.Members
{
	/// <summary>Search for documentation in XML file which is generated by compiler</summary>
	internal class XmlDocReader
	{
		/// <summary>Found member documentation information</summary>
		public class DocItem
		{
			/// <summary>General description</summary>
			public String Summary { get; set; }

			/// <summary>Additional comments</summary>
			public String Remarks { get; set; }

			/// <summary>Description about return type</summary>
			public String Returns { get; set; }
		}

		private readonly XmlDocument _document;

		/// <summary>Create instance of <see cref="XmlDocReader"/> and specify path to documentation file</summary>
		/// <param name="xmlPath">Path to documentation file</param>
		public XmlDocReader(String xmlPath)
		{
			if(String.IsNullOrEmpty(xmlPath))
				throw new ArgumentNullException(nameof(xmlPath));
			if(!File.Exists(xmlPath))
				throw new FileNotFoundException("File not found", xmlPath);

			this._document = new XmlDocument()
			{
				XmlResolver = null,
			};
			this._document.Load(xmlPath);
		}

		/// <summary>Search for property information</summary>
		/// <param name="propertyPath">Property information path in the documentation file</param>
		/// <returns>Found documentation or null</returns>
		public DocItem FindPropertyDescription(String propertyPath)
			=> String.IsNullOrEmpty(propertyPath)
				? throw new ArgumentNullException(nameof(propertyPath))
				: this.FindDocumentation("P", propertyPath);

		/// <summary>Search for method information</summary>
		/// <param name="methodPath">Method information path in the documentation file</param>
		/// <returns>Found documentation or null</returns>
		public DocItem FindMethodDescription(String methodPath)
			=> String.IsNullOrEmpty(methodPath)
				? throw new ArgumentNullException(nameof(methodPath))
				: this.FindDocumentation("M", methodPath);

		private DocItem FindDocumentation(String prefix, String memberName)
		{
			XmlNode node = this._document.SelectSingleNode($"/doc/members/member[@name=\"{prefix}:{memberName}\"]");
			if(node == null)
				return null;

			DocItem result = new DocItem
			{
				Summary = node["summary"]?.Value,
				Remarks = node["remarks"]?.Value,
				Returns = node["returns"]?.Value
			};
			return result;
		}
	}
}